cmake_minimum_required(VERSION 2.8.3)
project([%=modelName%])

# check c++11 / c++0x
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "-std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "-std=c++0x")
else()
    message(FATAL_ERROR "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

find_package(catkin REQUIRED COMPONENTS
  roscpp
[%
for(dep in cdmModel.deps) {
%]
  [%=dep%]
[%
}
%]
)

catkin_package(
 # INCLUDE_DIRS include
 LIBRARIES [%=modelName%]
 CATKIN_DEPENDS ${CATKIN_DEPS}
#  DEPENDS system_lib
)

#include_directories(include)
include_directories(
  ${catkin_INCLUDE_DIRS}
)

## Declare a cpp executable
add_executable([%=modelName%] src/main.cpp)

## Specify libraries to link a library or executable target against
target_link_libraries([%=modelName%]
  ${catkin_LIBRARIES}
)