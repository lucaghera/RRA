/*
* generated by Xtext
*/
package org.rra.adaptationModel.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.rra.adaptationModel.services.AdaptationModelDSLGrammarAccess;

public class AdaptationModelDSLParser extends AbstractContentAssistParser {
	
	@Inject
	private AdaptationModelDSLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.rra.adaptationModel.ui.contentassist.antlr.internal.InternalAdaptationModelDSLParser createParser() {
		org.rra.adaptationModel.ui.contentassist.antlr.internal.InternalAdaptationModelDSLParser result = new org.rra.adaptationModel.ui.contentassist.antlr.internal.InternalAdaptationModelDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAdaptationRuleAccess().getAlternatives(), "rule__AdaptationRule__Alternatives");
					put(grammarAccess.getAtomicActionAccess().getAlternatives_0(), "rule__AtomicAction__Alternatives_0");
					put(grammarAccess.getRuleBodyAccess().getAlternatives(), "rule__RuleBody__Alternatives");
					put(grammarAccess.getAttributeValueAccess().getAlternatives(), "rule__AttributeValue__Alternatives");
					put(grammarAccess.getMathOperatorAccess().getAlternatives(), "rule__MathOperator__Alternatives");
					put(grammarAccess.getLogicalOperatorAccess().getAlternatives(), "rule__LogicalOperator__Alternatives");
					put(grammarAccess.getQueryOperatorAccess().getAlternatives(), "rule__QueryOperator__Alternatives");
					put(grammarAccess.getAdaptationModelAccess().getGroup(), "rule__AdaptationModel__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getAtomicRuleAccess().getGroup(), "rule__AtomicRule__Group__0");
					put(grammarAccess.getRuleSetAccess().getGroup(), "rule__RuleSet__Group__0");
					put(grammarAccess.getAtomicRuleWithPriorityAccess().getGroup(), "rule__AtomicRuleWithPriority__Group__0");
					put(grammarAccess.getAtomicActionAccess().getGroup(), "rule__AtomicAction__Group__0");
					put(grammarAccess.getAtomicActionAccess().getGroup_1(), "rule__AtomicAction__Group_1__0");
					put(grammarAccess.getConditionActionAccess().getGroup(), "rule__ConditionAction__Group__0");
					put(grammarAccess.getConditionActionAccess().getGroup_0(), "rule__ConditionAction__Group_0__0");
					put(grammarAccess.getConditionActionAccess().getGroup_2(), "rule__ConditionAction__Group_2__0");
					put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
					put(grammarAccess.getConditionAccess().getGroup_3(), "rule__Condition__Group_3__0");
					put(grammarAccess.getAtomicActionSelectFeatureAccess().getGroup(), "rule__AtomicActionSelectFeature__Group__0");
					put(grammarAccess.getAtomicActionDeselectFeatureAccess().getGroup(), "rule__AtomicActionDeselectFeature__Group__0");
					put(grammarAccess.getAtomicActionModifyAttributeAccess().getGroup(), "rule__AtomicActionModifyAttribute__Group__0");
					put(grammarAccess.getAtomicActionQueryAccess().getGroup(), "rule__AtomicActionQuery__Group__0");
					put(grammarAccess.getAdaptationModelAccess().getImportsAssignment_0(), "rule__AdaptationModel__ImportsAssignment_0");
					put(grammarAccess.getAdaptationModelAccess().getNameAssignment_2(), "rule__AdaptationModel__NameAssignment_2");
					put(grammarAccess.getAdaptationModelAccess().getPeriodAssignment_5(), "rule__AdaptationModel__PeriodAssignment_5");
					put(grammarAccess.getAdaptationModelAccess().getAdaptationRulesAssignment_7(), "rule__AdaptationModel__AdaptationRulesAssignment_7");
					put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
					put(grammarAccess.getAtomicRuleAccess().getNameAssignment_1(), "rule__AtomicRule__NameAssignment_1");
					put(grammarAccess.getAtomicRuleAccess().getRuleBodyAssignment_3(), "rule__AtomicRule__RuleBodyAssignment_3");
					put(grammarAccess.getRuleSetAccess().getNameAssignment_1(), "rule__RuleSet__NameAssignment_1");
					put(grammarAccess.getRuleSetAccess().getAtomicRulesAssignment_3(), "rule__RuleSet__AtomicRulesAssignment_3");
					put(grammarAccess.getAtomicRuleWithPriorityAccess().getNameAssignment_1(), "rule__AtomicRuleWithPriority__NameAssignment_1");
					put(grammarAccess.getAtomicRuleWithPriorityAccess().getPriorityValueAssignment_3(), "rule__AtomicRuleWithPriority__PriorityValueAssignment_3");
					put(grammarAccess.getAtomicRuleWithPriorityAccess().getRuleBodyAssignment_5(), "rule__AtomicRuleWithPriority__RuleBodyAssignment_5");
					put(grammarAccess.getAtomicActionAccess().getSecondActionAssignment_1_1(), "rule__AtomicAction__SecondActionAssignment_1_1");
					put(grammarAccess.getPureActionAccess().getAtomicActionAssignment(), "rule__PureAction__AtomicActionAssignment");
					put(grammarAccess.getConditionActionAccess().getConditionAssignment_0_2(), "rule__ConditionAction__ConditionAssignment_0_2");
					put(grammarAccess.getConditionActionAccess().getAtomicActionAssignment_1(), "rule__ConditionAction__AtomicActionAssignment_1");
					put(grammarAccess.getConditionActionAccess().getElseAssignment_2_1(), "rule__ConditionAction__ElseAssignment_2_1");
					put(grammarAccess.getConditionAccess().getMeasurementAssignment_0(), "rule__Condition__MeasurementAssignment_0");
					put(grammarAccess.getConditionAccess().getOperatorAssignment_1(), "rule__Condition__OperatorAssignment_1");
					put(grammarAccess.getConditionAccess().getValueAssignment_2(), "rule__Condition__ValueAssignment_2");
					put(grammarAccess.getConditionAccess().getLogicalOpAssignment_3_0(), "rule__Condition__LogicalOpAssignment_3_0");
					put(grammarAccess.getConditionAccess().getSecondTermAssignment_3_1(), "rule__Condition__SecondTermAssignment_3_1");
					put(grammarAccess.getAtomicActionSelectFeatureAccess().getFeatureAssignment_2(), "rule__AtomicActionSelectFeature__FeatureAssignment_2");
					put(grammarAccess.getAtomicActionDeselectFeatureAccess().getFeatureAssignment_2(), "rule__AtomicActionDeselectFeature__FeatureAssignment_2");
					put(grammarAccess.getAtomicActionModifyAttributeAccess().getFeatureAttributeAssignment_2(), "rule__AtomicActionModifyAttribute__FeatureAttributeAssignment_2");
					put(grammarAccess.getAtomicActionModifyAttributeAccess().getAttributeValueAssignment_6(), "rule__AtomicActionModifyAttribute__AttributeValueAssignment_6");
					put(grammarAccess.getAtomicActionQueryAccess().getFeatureAssignment_3(), "rule__AtomicActionQuery__FeatureAssignment_3");
					put(grammarAccess.getAtomicActionQueryAccess().getQueryOperatorAssignment_6(), "rule__AtomicActionQuery__QueryOperatorAssignment_6");
					put(grammarAccess.getAtomicActionQueryAccess().getValueAssignment_8(), "rule__AtomicActionQuery__ValueAssignment_8");
					put(grammarAccess.getStringAttributeValueAccess().getValueAssignment(), "rule__StringAttributeValue__ValueAssignment");
					put(grammarAccess.getNFRAttributeValueAccess().getValueAssignment(), "rule__NFRAttributeValue__ValueAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.rra.adaptationModel.ui.contentassist.antlr.internal.InternalAdaptationModelDSLParser typedParser = (org.rra.adaptationModel.ui.contentassist.antlr.internal.InternalAdaptationModelDSLParser) parser;
			typedParser.entryRuleAdaptationModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public AdaptationModelDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(AdaptationModelDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
