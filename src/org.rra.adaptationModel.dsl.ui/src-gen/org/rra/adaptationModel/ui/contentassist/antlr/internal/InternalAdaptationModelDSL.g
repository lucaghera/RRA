/*
* generated by Xtext
*/
grammar InternalAdaptationModelDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.rra.adaptationModel.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.rra.adaptationModel.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.rra.adaptationModel.services.AdaptationModelDSLGrammarAccess;

}

@parser::members {
 
 	private AdaptationModelDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AdaptationModelDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleAdaptationModel
entryRuleAdaptationModel 
:
{ before(grammarAccess.getAdaptationModelRule()); }
	 ruleAdaptationModel
{ after(grammarAccess.getAdaptationModelRule()); } 
	 EOF 
;

// Rule AdaptationModel
ruleAdaptationModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdaptationModelAccess().getGroup()); }
(rule__AdaptationModel__Group__0)
{ after(grammarAccess.getAdaptationModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdaptationRule
entryRuleAdaptationRule 
:
{ before(grammarAccess.getAdaptationRuleRule()); }
	 ruleAdaptationRule
{ after(grammarAccess.getAdaptationRuleRule()); } 
	 EOF 
;

// Rule AdaptationRule
ruleAdaptationRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdaptationRuleAccess().getAlternatives()); }
(rule__AdaptationRule__Alternatives)
{ after(grammarAccess.getAdaptationRuleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicRule
entryRuleAtomicRule 
:
{ before(grammarAccess.getAtomicRuleRule()); }
	 ruleAtomicRule
{ after(grammarAccess.getAtomicRuleRule()); } 
	 EOF 
;

// Rule AtomicRule
ruleAtomicRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicRuleAccess().getGroup()); }
(rule__AtomicRule__Group__0)
{ after(grammarAccess.getAtomicRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleSet
entryRuleRuleSet 
:
{ before(grammarAccess.getRuleSetRule()); }
	 ruleRuleSet
{ after(grammarAccess.getRuleSetRule()); } 
	 EOF 
;

// Rule RuleSet
ruleRuleSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleSetAccess().getGroup()); }
(rule__RuleSet__Group__0)
{ after(grammarAccess.getRuleSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicRuleWithPriority
entryRuleAtomicRuleWithPriority 
:
{ before(grammarAccess.getAtomicRuleWithPriorityRule()); }
	 ruleAtomicRuleWithPriority
{ after(grammarAccess.getAtomicRuleWithPriorityRule()); } 
	 EOF 
;

// Rule AtomicRuleWithPriority
ruleAtomicRuleWithPriority
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicRuleWithPriorityAccess().getGroup()); }
(rule__AtomicRuleWithPriority__Group__0)
{ after(grammarAccess.getAtomicRuleWithPriorityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicAction
entryRuleAtomicAction 
:
{ before(grammarAccess.getAtomicActionRule()); }
	 ruleAtomicAction
{ after(grammarAccess.getAtomicActionRule()); } 
	 EOF 
;

// Rule AtomicAction
ruleAtomicAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicActionAccess().getGroup()); }
(rule__AtomicAction__Group__0)
{ after(grammarAccess.getAtomicActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleBody
entryRuleRuleBody 
:
{ before(grammarAccess.getRuleBodyRule()); }
	 ruleRuleBody
{ after(grammarAccess.getRuleBodyRule()); } 
	 EOF 
;

// Rule RuleBody
ruleRuleBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleBodyAccess().getAlternatives()); }
(rule__RuleBody__Alternatives)
{ after(grammarAccess.getRuleBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePureAction
entryRulePureAction 
:
{ before(grammarAccess.getPureActionRule()); }
	 rulePureAction
{ after(grammarAccess.getPureActionRule()); } 
	 EOF 
;

// Rule PureAction
rulePureAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPureActionAccess().getAtomicActionAssignment()); }
(rule__PureAction__AtomicActionAssignment)
{ after(grammarAccess.getPureActionAccess().getAtomicActionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionAction
entryRuleConditionAction 
:
{ before(grammarAccess.getConditionActionRule()); }
	 ruleConditionAction
{ after(grammarAccess.getConditionActionRule()); } 
	 EOF 
;

// Rule ConditionAction
ruleConditionAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionActionAccess().getGroup()); }
(rule__ConditionAction__Group__0)
{ after(grammarAccess.getConditionActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getGroup()); }
(rule__Condition__Group__0)
{ after(grammarAccess.getConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOPERATOR
entryRuleOPERATOR 
:
{ before(grammarAccess.getOPERATORRule()); }
	 ruleOPERATOR
{ after(grammarAccess.getOPERATORRule()); } 
	 EOF 
;

// Rule OPERATOR
ruleOPERATOR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOPERATORAccess().getAlternatives()); }
(rule__OPERATOR__Alternatives)
{ after(grammarAccess.getOPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLOGICAL_OPERATOR
entryRuleLOGICAL_OPERATOR 
:
{ before(grammarAccess.getLOGICAL_OPERATORRule()); }
	 ruleLOGICAL_OPERATOR
{ after(grammarAccess.getLOGICAL_OPERATORRule()); } 
	 EOF 
;

// Rule LOGICAL_OPERATOR
ruleLOGICAL_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLOGICAL_OPERATORAccess().getAlternatives()); }
(rule__LOGICAL_OPERATOR__Alternatives)
{ after(grammarAccess.getLOGICAL_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicActionSelectFeature
entryRuleAtomicActionSelectFeature 
:
{ before(grammarAccess.getAtomicActionSelectFeatureRule()); }
	 ruleAtomicActionSelectFeature
{ after(grammarAccess.getAtomicActionSelectFeatureRule()); } 
	 EOF 
;

// Rule AtomicActionSelectFeature
ruleAtomicActionSelectFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicActionSelectFeatureAccess().getGroup()); }
(rule__AtomicActionSelectFeature__Group__0)
{ after(grammarAccess.getAtomicActionSelectFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicActionDeselectFeature
entryRuleAtomicActionDeselectFeature 
:
{ before(grammarAccess.getAtomicActionDeselectFeatureRule()); }
	 ruleAtomicActionDeselectFeature
{ after(grammarAccess.getAtomicActionDeselectFeatureRule()); } 
	 EOF 
;

// Rule AtomicActionDeselectFeature
ruleAtomicActionDeselectFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicActionDeselectFeatureAccess().getGroup()); }
(rule__AtomicActionDeselectFeature__Group__0)
{ after(grammarAccess.getAtomicActionDeselectFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicActionModifyAttribute
entryRuleAtomicActionModifyAttribute 
:
{ before(grammarAccess.getAtomicActionModifyAttributeRule()); }
	 ruleAtomicActionModifyAttribute
{ after(grammarAccess.getAtomicActionModifyAttributeRule()); } 
	 EOF 
;

// Rule AtomicActionModifyAttribute
ruleAtomicActionModifyAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getGroup()); }
(rule__AtomicActionModifyAttribute__Group__0)
{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicActionQuery
entryRuleAtomicActionQuery 
:
{ before(grammarAccess.getAtomicActionQueryRule()); }
	 ruleAtomicActionQuery
{ after(grammarAccess.getAtomicActionQueryRule()); } 
	 EOF 
;

// Rule AtomicActionQuery
ruleAtomicActionQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getGroup()); }
(rule__AtomicActionQuery__Group__0)
{ after(grammarAccess.getAtomicActionQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQueryOperator
entryRuleQueryOperator 
:
{ before(grammarAccess.getQueryOperatorRule()); }
	 ruleQueryOperator
{ after(grammarAccess.getQueryOperatorRule()); } 
	 EOF 
;

// Rule QueryOperator
ruleQueryOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryOperatorAccess().getAlternatives()); }
(rule__QueryOperator__Alternatives)
{ after(grammarAccess.getQueryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeValue
entryRuleAttributeValue 
:
{ before(grammarAccess.getAttributeValueRule()); }
	 ruleAttributeValue
{ after(grammarAccess.getAttributeValueRule()); } 
	 EOF 
;

// Rule AttributeValue
ruleAttributeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeValueAccess().getAlternatives()); }
(rule__AttributeValue__Alternatives)
{ after(grammarAccess.getAttributeValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringAttributeValue
entryRuleStringAttributeValue 
:
{ before(grammarAccess.getStringAttributeValueRule()); }
	 ruleStringAttributeValue
{ after(grammarAccess.getStringAttributeValueRule()); } 
	 EOF 
;

// Rule StringAttributeValue
ruleStringAttributeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringAttributeValueAccess().getValueAssignment()); }
(rule__StringAttributeValue__ValueAssignment)
{ after(grammarAccess.getStringAttributeValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNFRAttributeValue
entryRuleNFRAttributeValue 
:
{ before(grammarAccess.getNFRAttributeValueRule()); }
	 ruleNFRAttributeValue
{ after(grammarAccess.getNFRAttributeValueRule()); } 
	 EOF 
;

// Rule NFRAttributeValue
ruleNFRAttributeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNFRAttributeValueAccess().getValueAssignment()); }
(rule__NFRAttributeValue__ValueAssignment)
{ after(grammarAccess.getNFRAttributeValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AdaptationRule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationRuleAccess().getAtomicRuleParserRuleCall_0()); }
	ruleAtomicRule
{ after(grammarAccess.getAdaptationRuleAccess().getAtomicRuleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAdaptationRuleAccess().getRuleSetParserRuleCall_1()); }
	ruleRuleSet
{ after(grammarAccess.getAdaptationRuleAccess().getRuleSetParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicAction__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionAccess().getAtomicActionSelectFeatureParserRuleCall_0_0()); }
	ruleAtomicActionSelectFeature
{ after(grammarAccess.getAtomicActionAccess().getAtomicActionSelectFeatureParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getAtomicActionAccess().getAtomicActionDeselectFeatureParserRuleCall_0_1()); }
	ruleAtomicActionDeselectFeature
{ after(grammarAccess.getAtomicActionAccess().getAtomicActionDeselectFeatureParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getAtomicActionAccess().getAtomicActionModifyAttributeParserRuleCall_0_2()); }
	ruleAtomicActionModifyAttribute
{ after(grammarAccess.getAtomicActionAccess().getAtomicActionModifyAttributeParserRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getAtomicActionAccess().getAtomicActionQueryParserRuleCall_0_3()); }
	ruleAtomicActionQuery
{ after(grammarAccess.getAtomicActionAccess().getAtomicActionQueryParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleBodyAccess().getPureActionParserRuleCall_0()); }
	rulePureAction
{ after(grammarAccess.getRuleBodyAccess().getPureActionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRuleBodyAccess().getConditionActionParserRuleCall_1()); }
	ruleConditionAction
{ after(grammarAccess.getRuleBodyAccess().getConditionActionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOPERATORAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getOPERATORAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOPERATORAccess().getGreaterThanSignKeyword_1()); }

	'>' 

{ after(grammarAccess.getOPERATORAccess().getGreaterThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOPERATORAccess().getEqualsSignEqualsSignKeyword_2()); }

	'==' 

{ after(grammarAccess.getOPERATORAccess().getEqualsSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOPERATORAccess().getLessThanSignGreaterThanSignKeyword_3()); }

	'<>' 

{ after(grammarAccess.getOPERATORAccess().getLessThanSignGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LOGICAL_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLOGICAL_OPERATORAccess().getANDKeyword_0()); }

	'AND' 

{ after(grammarAccess.getLOGICAL_OPERATORAccess().getANDKeyword_0()); }
)

    |(
{ before(grammarAccess.getLOGICAL_OPERATORAccess().getORKeyword_1()); }

	'OR' 

{ after(grammarAccess.getLOGICAL_OPERATORAccess().getORKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryOperatorAccess().getMaxKeyword_0()); }

	'max' 

{ after(grammarAccess.getQueryOperatorAccess().getMaxKeyword_0()); }
)

    |(
{ before(grammarAccess.getQueryOperatorAccess().getMinKeyword_1()); }

	'min' 

{ after(grammarAccess.getQueryOperatorAccess().getMinKeyword_1()); }
)

    |(
{ before(grammarAccess.getQueryOperatorAccess().getIsKeyword_2()); }

	'is' 

{ after(grammarAccess.getQueryOperatorAccess().getIsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getStringAttributeValueParserRuleCall_0()); }
	ruleStringAttributeValue
{ after(grammarAccess.getAttributeValueAccess().getStringAttributeValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAttributeValueAccess().getNFRAttributeValueParserRuleCall_1()); }
	ruleNFRAttributeValue
{ after(grammarAccess.getAttributeValueAccess().getNFRAttributeValueParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AdaptationModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdaptationModel__Group__0__Impl
	rule__AdaptationModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getImportsAssignment_0()); }
(rule__AdaptationModel__ImportsAssignment_0)*
{ after(grammarAccess.getAdaptationModelAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdaptationModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdaptationModel__Group__1__Impl
	rule__AdaptationModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getNameKeyword_1()); }

	'name' 

{ after(grammarAccess.getAdaptationModelAccess().getNameKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdaptationModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdaptationModel__Group__2__Impl
	rule__AdaptationModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getNameAssignment_2()); }
(rule__AdaptationModel__NameAssignment_2)
{ after(grammarAccess.getAdaptationModelAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdaptationModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdaptationModel__Group__3__Impl
	rule__AdaptationModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAdaptationModelAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdaptationModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdaptationModel__Group__4__Impl
	rule__AdaptationModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getFrequencyKeyword_4()); }

	'frequency' 

{ after(grammarAccess.getAdaptationModelAccess().getFrequencyKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdaptationModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdaptationModel__Group__5__Impl
	rule__AdaptationModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getFrequencyAssignment_5()); }
(rule__AdaptationModel__FrequencyAssignment_5)
{ after(grammarAccess.getAdaptationModelAccess().getFrequencyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdaptationModel__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdaptationModel__Group__6__Impl
	rule__AdaptationModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getAdaptationModelAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdaptationModel__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdaptationModel__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getAdaptationRulesAssignment_7()); }
(rule__AdaptationModel__AdaptationRulesAssignment_7)*
{ after(grammarAccess.getAdaptationModelAccess().getAdaptationRulesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRule__Group__0__Impl
	rule__AtomicRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleAccess().getRuleKeyword_0()); }

	'rule' 

{ after(grammarAccess.getAtomicRuleAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRule__Group__1__Impl
	rule__AtomicRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleAccess().getNameAssignment_1()); }
(rule__AtomicRule__NameAssignment_1)
{ after(grammarAccess.getAtomicRuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRule__Group__2__Impl
	rule__AtomicRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAtomicRuleAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRule__Group__3__Impl
	rule__AtomicRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleAccess().getRuleBodyAssignment_3()); }
(rule__AtomicRule__RuleBodyAssignment_3)
{ after(grammarAccess.getAtomicRuleAccess().getRuleBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRule__Group__4__Impl
	rule__AtomicRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getAtomicRuleAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getAtomicRuleAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RuleSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSet__Group__0__Impl
	rule__RuleSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getRule_setKeyword_0()); }

	'rule_set' 

{ after(grammarAccess.getRuleSetAccess().getRule_setKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSet__Group__1__Impl
	rule__RuleSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getNameAssignment_1()); }
(rule__RuleSet__NameAssignment_1)
{ after(grammarAccess.getRuleSetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSet__Group__2__Impl
	rule__RuleSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRuleSetAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSet__Group__3__Impl
	rule__RuleSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRuleSetAccess().getAtomicRulesAssignment_3()); }
(rule__RuleSet__AtomicRulesAssignment_3)
{ after(grammarAccess.getRuleSetAccess().getAtomicRulesAssignment_3()); }
)
(
{ before(grammarAccess.getRuleSetAccess().getAtomicRulesAssignment_3()); }
(rule__RuleSet__AtomicRulesAssignment_3)*
{ after(grammarAccess.getRuleSetAccess().getAtomicRulesAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSet__Group__4__Impl
	rule__RuleSet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getRuleSetAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSet__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getRuleSetAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AtomicRuleWithPriority__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRuleWithPriority__Group__0__Impl
	rule__AtomicRuleWithPriority__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRuleWithPriority__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleWithPriorityAccess().getRuleKeyword_0()); }

	'rule' 

{ after(grammarAccess.getAtomicRuleWithPriorityAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRuleWithPriority__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRuleWithPriority__Group__1__Impl
	rule__AtomicRuleWithPriority__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRuleWithPriority__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleWithPriorityAccess().getNameAssignment_1()); }
(rule__AtomicRuleWithPriority__NameAssignment_1)
{ after(grammarAccess.getAtomicRuleWithPriorityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRuleWithPriority__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRuleWithPriority__Group__2__Impl
	rule__AtomicRuleWithPriority__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRuleWithPriority__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleWithPriorityAccess().getPriorityKeyword_2()); }

	'priority' 

{ after(grammarAccess.getAtomicRuleWithPriorityAccess().getPriorityKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRuleWithPriority__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRuleWithPriority__Group__3__Impl
	rule__AtomicRuleWithPriority__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRuleWithPriority__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleWithPriorityAccess().getPriorityValueAssignment_3()); }
(rule__AtomicRuleWithPriority__PriorityValueAssignment_3)
{ after(grammarAccess.getAtomicRuleWithPriorityAccess().getPriorityValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRuleWithPriority__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRuleWithPriority__Group__4__Impl
	rule__AtomicRuleWithPriority__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRuleWithPriority__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleWithPriorityAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getAtomicRuleWithPriorityAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRuleWithPriority__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRuleWithPriority__Group__5__Impl
	rule__AtomicRuleWithPriority__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRuleWithPriority__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleWithPriorityAccess().getRuleBodyAssignment_5()); }
(rule__AtomicRuleWithPriority__RuleBodyAssignment_5)
{ after(grammarAccess.getAtomicRuleWithPriorityAccess().getRuleBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRuleWithPriority__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRuleWithPriority__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRuleWithPriority__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleWithPriorityAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getAtomicRuleWithPriorityAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AtomicAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicAction__Group__0__Impl
	rule__AtomicAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionAccess().getAlternatives_0()); }
(rule__AtomicAction__Alternatives_0)
{ after(grammarAccess.getAtomicActionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionAccess().getGroup_1()); }
(rule__AtomicAction__Group_1__0)?
{ after(grammarAccess.getAtomicActionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicAction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicAction__Group_1__0__Impl
	rule__AtomicAction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicAction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionAccess().getANDKeyword_1_0()); }

	'AND' 

{ after(grammarAccess.getAtomicActionAccess().getANDKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicAction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicAction__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicAction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionAccess().getSecondActionAssignment_1_1()); }
(rule__AtomicAction__SecondActionAssignment_1_1)
{ after(grammarAccess.getAtomicActionAccess().getSecondActionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionAction__Group__0__Impl
	rule__ConditionAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getGroup_0()); }
(rule__ConditionAction__Group_0__0)
{ after(grammarAccess.getConditionActionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionAction__Group__1__Impl
	rule__ConditionAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getAtomicActionAssignment_1()); }
(rule__ConditionAction__AtomicActionAssignment_1)
{ after(grammarAccess.getConditionActionAccess().getAtomicActionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getGroup_2()); }
(rule__ConditionAction__Group_2__0)?
{ after(grammarAccess.getConditionActionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConditionAction__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionAction__Group_0__0__Impl
	rule__ConditionAction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getIfKeyword_0_0()); }

	'if' 

{ after(grammarAccess.getConditionActionAccess().getIfKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionAction__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionAction__Group_0__1__Impl
	rule__ConditionAction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getConditionActionAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionAction__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionAction__Group_0__2__Impl
	rule__ConditionAction__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getConditionAssignment_0_2()); }
(rule__ConditionAction__ConditionAssignment_0_2)
{ after(grammarAccess.getConditionActionAccess().getConditionAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionAction__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionAction__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getConditionActionAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConditionAction__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionAction__Group_2__0__Impl
	rule__ConditionAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getElseKeyword_2_0()); }

	'else' 

{ after(grammarAccess.getConditionActionAccess().getElseKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionAction__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionAction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getElseAssignment_2_1()); }
(rule__ConditionAction__ElseAssignment_2_1)
{ after(grammarAccess.getConditionActionAccess().getElseAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Condition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getMeasurementAssignment_0()); }
(rule__Condition__MeasurementAssignment_0)
{ after(grammarAccess.getConditionAccess().getMeasurementAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getOperatorAssignment_1()); }
(rule__Condition__OperatorAssignment_1)
{ after(grammarAccess.getConditionAccess().getOperatorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__2__Impl
	rule__Condition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getValueAssignment_2()); }
(rule__Condition__ValueAssignment_2)
{ after(grammarAccess.getConditionAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getGroup_3()); }
(rule__Condition__Group_3__0)?
{ after(grammarAccess.getConditionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Condition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group_3__0__Impl
	rule__Condition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getLogicalOpAssignment_3_0()); }
(rule__Condition__LogicalOpAssignment_3_0)
{ after(grammarAccess.getConditionAccess().getLogicalOpAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getSecondTermAssignment_3_1()); }
(rule__Condition__SecondTermAssignment_3_1)
{ after(grammarAccess.getConditionAccess().getSecondTermAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicActionSelectFeature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionSelectFeature__Group__0__Impl
	rule__AtomicActionSelectFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionSelectFeature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionSelectFeatureAccess().getActivate_featureKeyword_0()); }

	'activate_feature' 

{ after(grammarAccess.getAtomicActionSelectFeatureAccess().getActivate_featureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionSelectFeature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionSelectFeature__Group__1__Impl
	rule__AtomicActionSelectFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionSelectFeature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionSelectFeatureAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAtomicActionSelectFeatureAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionSelectFeature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionSelectFeature__Group__2__Impl
	rule__AtomicActionSelectFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionSelectFeature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionSelectFeatureAccess().getFeatureAssignment_2()); }
(rule__AtomicActionSelectFeature__FeatureAssignment_2)
{ after(grammarAccess.getAtomicActionSelectFeatureAccess().getFeatureAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionSelectFeature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionSelectFeature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionSelectFeature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionSelectFeatureAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAtomicActionSelectFeatureAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AtomicActionDeselectFeature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionDeselectFeature__Group__0__Impl
	rule__AtomicActionDeselectFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionDeselectFeature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionDeselectFeatureAccess().getDeactivate_featureKeyword_0()); }

	'deactivate_feature' 

{ after(grammarAccess.getAtomicActionDeselectFeatureAccess().getDeactivate_featureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionDeselectFeature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionDeselectFeature__Group__1__Impl
	rule__AtomicActionDeselectFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionDeselectFeature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionDeselectFeatureAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAtomicActionDeselectFeatureAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionDeselectFeature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionDeselectFeature__Group__2__Impl
	rule__AtomicActionDeselectFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionDeselectFeature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionDeselectFeatureAccess().getFeatureAssignment_2()); }
(rule__AtomicActionDeselectFeature__FeatureAssignment_2)
{ after(grammarAccess.getAtomicActionDeselectFeatureAccess().getFeatureAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionDeselectFeature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionDeselectFeature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionDeselectFeature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionDeselectFeatureAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAtomicActionDeselectFeatureAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AtomicActionModifyAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionModifyAttribute__Group__0__Impl
	rule__AtomicActionModifyAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionModifyAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getSet_attributeKeyword_0()); }

	'set_attribute' 

{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getSet_attributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionModifyAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionModifyAttribute__Group__1__Impl
	rule__AtomicActionModifyAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionModifyAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionModifyAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionModifyAttribute__Group__2__Impl
	rule__AtomicActionModifyAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionModifyAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getFeatureAttributeAssignment_2()); }
(rule__AtomicActionModifyAttribute__FeatureAttributeAssignment_2)
{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getFeatureAttributeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionModifyAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionModifyAttribute__Group__3__Impl
	rule__AtomicActionModifyAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionModifyAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionModifyAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionModifyAttribute__Group__4__Impl
	rule__AtomicActionModifyAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionModifyAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getWith_valueKeyword_4()); }

	'with_value' 

{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getWith_valueKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionModifyAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionModifyAttribute__Group__5__Impl
	rule__AtomicActionModifyAttribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionModifyAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getLeftParenthesisKeyword_5()); }

	'(' 

{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getLeftParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionModifyAttribute__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionModifyAttribute__Group__6__Impl
	rule__AtomicActionModifyAttribute__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionModifyAttribute__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getAttributeValueAssignment_6()); }
(rule__AtomicActionModifyAttribute__AttributeValueAssignment_6)
{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getAttributeValueAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionModifyAttribute__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionModifyAttribute__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionModifyAttribute__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__AtomicActionQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionQuery__Group__0__Impl
	rule__AtomicActionQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getSelect_feature_Keyword_0()); }

	'select_feature_*' 

{ after(grammarAccess.getAtomicActionQueryAccess().getSelect_feature_Keyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionQuery__Group__1__Impl
	rule__AtomicActionQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getFrom_variants_of_featureKeyword_1()); }

	'from_variants_of_feature' 

{ after(grammarAccess.getAtomicActionQueryAccess().getFrom_variants_of_featureKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionQuery__Group__2__Impl
	rule__AtomicActionQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getAtomicActionQueryAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionQuery__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionQuery__Group__3__Impl
	rule__AtomicActionQuery__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getFeatureAssignment_3()); }
(rule__AtomicActionQuery__FeatureAssignment_3)
{ after(grammarAccess.getAtomicActionQueryAccess().getFeatureAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionQuery__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionQuery__Group__4__Impl
	rule__AtomicActionQuery__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getAtomicActionQueryAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionQuery__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionQuery__Group__5__Impl
	rule__AtomicActionQuery__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getWhere_attribueKeyword_5()); }

	'where_attribue' 

{ after(grammarAccess.getAtomicActionQueryAccess().getWhere_attribueKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionQuery__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionQuery__Group__6__Impl
	rule__AtomicActionQuery__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getQueryOperatorParserRuleCall_6()); }
	ruleQueryOperator
{ after(grammarAccess.getAtomicActionQueryAccess().getQueryOperatorParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionQuery__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionQuery__Group__7__Impl
	rule__AtomicActionQuery__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getAtomicActionQueryAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionQuery__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionQuery__Group__8__Impl
	rule__AtomicActionQuery__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getValueAssignment_8()); }
(rule__AtomicActionQuery__ValueAssignment_8)
{ after(grammarAccess.getAtomicActionQueryAccess().getValueAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicActionQuery__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicActionQuery__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getAtomicActionQueryAccess().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}























rule__AdaptationModel__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getAdaptationModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getAdaptationModelAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__FrequencyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getFrequencyINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getAdaptationModelAccess().getFrequencyINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__AdaptationRulesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getAdaptationRulesAdaptationRuleParserRuleCall_7_0()); }
	ruleAdaptationRule{ after(grammarAccess.getAdaptationModelAccess().getAdaptationRulesAdaptationRuleParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAtomicRuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRule__RuleBodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleAccess().getRuleBodyRuleBodyParserRuleCall_3_0()); }
	ruleRuleBody{ after(grammarAccess.getAtomicRuleAccess().getRuleBodyRuleBodyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRuleSetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__AtomicRulesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getAtomicRulesAtomicRuleWithPriorityParserRuleCall_3_0()); }
	ruleAtomicRuleWithPriority{ after(grammarAccess.getRuleSetAccess().getAtomicRulesAtomicRuleWithPriorityParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRuleWithPriority__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleWithPriorityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAtomicRuleWithPriorityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRuleWithPriority__PriorityValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleWithPriorityAccess().getPriorityValueINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getAtomicRuleWithPriorityAccess().getPriorityValueINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRuleWithPriority__RuleBodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRuleWithPriorityAccess().getRuleBodyRuleBodyParserRuleCall_5_0()); }
	ruleRuleBody{ after(grammarAccess.getAtomicRuleWithPriorityAccess().getRuleBodyRuleBodyParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicAction__SecondActionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionAccess().getSecondActionAtomicActionParserRuleCall_1_1_0()); }
	ruleAtomicAction{ after(grammarAccess.getAtomicActionAccess().getSecondActionAtomicActionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PureAction__AtomicActionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPureActionAccess().getAtomicActionAtomicActionParserRuleCall_0()); }
	ruleAtomicAction{ after(grammarAccess.getPureActionAccess().getAtomicActionAtomicActionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__ConditionAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getConditionConditionParserRuleCall_0_2_0()); }
	ruleCondition{ after(grammarAccess.getConditionActionAccess().getConditionConditionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__AtomicActionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getAtomicActionAtomicActionParserRuleCall_1_0()); }
	ruleAtomicAction{ after(grammarAccess.getConditionActionAccess().getAtomicActionAtomicActionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAction__ElseAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionActionAccess().getElseRuleBodyParserRuleCall_2_1_0()); }
	ruleRuleBody{ after(grammarAccess.getConditionActionAccess().getElseRuleBodyParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__MeasurementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getMeasurementContextDependentMeasurementCrossReference_0_0()); }
(
{ before(grammarAccess.getConditionAccess().getMeasurementContextDependentMeasurementQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getConditionAccess().getMeasurementContextDependentMeasurementQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getConditionAccess().getMeasurementContextDependentMeasurementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getOperatorOPERATORParserRuleCall_1_0()); }
	ruleOPERATOR{ after(grammarAccess.getConditionAccess().getOperatorOPERATORParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getConditionAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__LogicalOpAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getLogicalOpLOGICAL_OPERATORParserRuleCall_3_0_0()); }
	ruleLOGICAL_OPERATOR{ after(grammarAccess.getConditionAccess().getLogicalOpLOGICAL_OPERATORParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__SecondTermAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getSecondTermConditionParserRuleCall_3_1_0()); }
	ruleCondition{ after(grammarAccess.getConditionAccess().getSecondTermConditionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionSelectFeature__FeatureAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionSelectFeatureAccess().getFeatureFeatureCrossReference_2_0()); }
(
{ before(grammarAccess.getAtomicActionSelectFeatureAccess().getFeatureFeatureQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAtomicActionSelectFeatureAccess().getFeatureFeatureQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAtomicActionSelectFeatureAccess().getFeatureFeatureCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionDeselectFeature__FeatureAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionDeselectFeatureAccess().getFeatureFeatureCrossReference_2_0()); }
(
{ before(grammarAccess.getAtomicActionDeselectFeatureAccess().getFeatureFeatureQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAtomicActionDeselectFeatureAccess().getFeatureFeatureQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAtomicActionDeselectFeatureAccess().getFeatureFeatureCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionModifyAttribute__FeatureAttributeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getFeatureAttributeCVAttributeCrossReference_2_0()); }
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getFeatureAttributeCVAttributeQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getFeatureAttributeCVAttributeQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getFeatureAttributeCVAttributeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionModifyAttribute__AttributeValueAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionModifyAttributeAccess().getAttributeValueAttributeValueParserRuleCall_6_0()); }
	ruleAttributeValue{ after(grammarAccess.getAtomicActionModifyAttributeAccess().getAttributeValueAttributeValueParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__FeatureAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getFeatureFeatureCrossReference_3_0()); }
(
{ before(grammarAccess.getAtomicActionQueryAccess().getFeatureFeatureQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAtomicActionQueryAccess().getFeatureFeatureQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getAtomicActionQueryAccess().getFeatureFeatureCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicActionQuery__ValueAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionQueryAccess().getValueSTRINGTerminalRuleCall_8_0()); }
	RULE_STRING{ after(grammarAccess.getAtomicActionQueryAccess().getValueSTRINGTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributeValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringAttributeValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringAttributeValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NFRAttributeValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNFRAttributeValueAccess().getValueNFRAttributeCrossReference_0()); }
(
{ before(grammarAccess.getNFRAttributeValueAccess().getValueNFRAttributeQualifiedNameParserRuleCall_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getNFRAttributeValueAccess().getValueNFRAttributeQualifiedNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getNFRAttributeValueAccess().getValueNFRAttributeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


