/*
* generated by Xtext
*/
grammar InternalAdaptationModelDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.rra.adaptationModel.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.rra.adaptationModel.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.rra.adaptationModel.services.AdaptationModelDSLGrammarAccess;

}

@parser::members {
 
 	private AdaptationModelDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AdaptationModelDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleAdaptationModel
entryRuleAdaptationModel 
:
{ before(grammarAccess.getAdaptationModelRule()); }
	 ruleAdaptationModel
{ after(grammarAccess.getAdaptationModelRule()); } 
	 EOF 
;

// Rule AdaptationModel
ruleAdaptationModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdaptationModelAccess().getGroup()); }
(rule__AdaptationModel__Group__0)
{ after(grammarAccess.getAdaptationModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRule
entryRuleRule 
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleAccess().getGroup()); }
(rule__Rule__Group__0)
{ after(grammarAccess.getRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getMeasurementComparisonAssignment()); }
(rule__Condition__MeasurementComparisonAssignment)
{ after(grammarAccess.getConditionAccess().getMeasurementComparisonAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMeasurementComparison
entryRuleMeasurementComparison 
:
{ before(grammarAccess.getMeasurementComparisonRule()); }
	 ruleMeasurementComparison
{ after(grammarAccess.getMeasurementComparisonRule()); } 
	 EOF 
;

// Rule MeasurementComparison
ruleMeasurementComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMeasurementComparisonAccess().getGroup()); }
(rule__MeasurementComparison__Group__0)
{ after(grammarAccess.getMeasurementComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOPERATOR
entryRuleOPERATOR 
:
{ before(grammarAccess.getOPERATORRule()); }
	 ruleOPERATOR
{ after(grammarAccess.getOPERATORRule()); } 
	 EOF 
;

// Rule OPERATOR
ruleOPERATOR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOPERATORAccess().getAlternatives()); }
(rule__OPERATOR__Alternatives)
{ after(grammarAccess.getOPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLOGICAL_OPERATOR
entryRuleLOGICAL_OPERATOR 
:
{ before(grammarAccess.getLOGICAL_OPERATORRule()); }
	 ruleLOGICAL_OPERATOR
{ after(grammarAccess.getLOGICAL_OPERATORRule()); } 
	 EOF 
;

// Rule LOGICAL_OPERATOR
ruleLOGICAL_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLOGICAL_OPERATORAccess().getAlternatives()); }
(rule__LOGICAL_OPERATOR__Alternatives)
{ after(grammarAccess.getLOGICAL_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMATH_OPERATOR
entryRuleMATH_OPERATOR 
:
{ before(grammarAccess.getMATH_OPERATORRule()); }
	 ruleMATH_OPERATOR
{ after(grammarAccess.getMATH_OPERATORRule()); } 
	 EOF 
;

// Rule MATH_OPERATOR
ruleMATH_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMATH_OPERATORAccess().getAlternatives()); }
(rule__MATH_OPERATOR__Alternatives)
{ after(grammarAccess.getMATH_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}









// Entry rule entryRuleAtomicAction
entryRuleAtomicAction 
:
{ before(grammarAccess.getAtomicActionRule()); }
	 ruleAtomicAction
{ after(grammarAccess.getAtomicActionRule()); } 
	 EOF 
;

// Rule AtomicAction
ruleAtomicAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicActionAccess().getAlternatives()); }
(rule__AtomicAction__Alternatives)
{ after(grammarAccess.getAtomicActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQueryAction
entryRuleQueryAction 
:
{ before(grammarAccess.getQueryActionRule()); }
	 ruleQueryAction
{ after(grammarAccess.getQueryActionRule()); } 
	 EOF 
;

// Rule QueryAction
ruleQueryAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryActionAccess().getGroup()); }
(rule__QueryAction__Group__0)
{ after(grammarAccess.getQueryActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectAction
entryRuleSelectAction 
:
{ before(grammarAccess.getSelectActionRule()); }
	 ruleSelectAction
{ after(grammarAccess.getSelectActionRule()); } 
	 EOF 
;

// Rule SelectAction
ruleSelectAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectActionAccess().getGroup()); }
(rule__SelectAction__Group__0)
{ after(grammarAccess.getSelectActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeselectAction
entryRuleDeselectAction 
:
{ before(grammarAccess.getDeselectActionRule()); }
	 ruleDeselectAction
{ after(grammarAccess.getDeselectActionRule()); } 
	 EOF 
;

// Rule DeselectAction
ruleDeselectAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeselectActionAccess().getGroup()); }
(rule__DeselectAction__Group__0)
{ after(grammarAccess.getDeselectActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifyAttribute
entryRuleModifyAttribute 
:
{ before(grammarAccess.getModifyAttributeRule()); }
	 ruleModifyAttribute
{ after(grammarAccess.getModifyAttributeRule()); } 
	 EOF 
;

// Rule ModifyAttribute
ruleModifyAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifyAttributeAccess().getGroup()); }
(rule__ModifyAttribute__Group__0)
{ after(grammarAccess.getModifyAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeValue
entryRuleAttributeValue 
:
{ before(grammarAccess.getAttributeValueRule()); }
	 ruleAttributeValue
{ after(grammarAccess.getAttributeValueRule()); } 
	 EOF 
;

// Rule AttributeValue
ruleAttributeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeValueAccess().getAlternatives()); }
(rule__AttributeValue__Alternatives)
{ after(grammarAccess.getAttributeValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringAttributeValue
entryRuleStringAttributeValue 
:
{ before(grammarAccess.getStringAttributeValueRule()); }
	 ruleStringAttributeValue
{ after(grammarAccess.getStringAttributeValueRule()); } 
	 EOF 
;

// Rule StringAttributeValue
ruleStringAttributeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringAttributeValueAccess().getValueAssignment()); }
(rule__StringAttributeValue__ValueAssignment)
{ after(grammarAccess.getStringAttributeValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNFRAttributeValue
entryRuleNFRAttributeValue 
:
{ before(grammarAccess.getNFRAttributeValueRule()); }
	 ruleNFRAttributeValue
{ after(grammarAccess.getNFRAttributeValueRule()); } 
	 EOF 
;

// Rule NFRAttributeValue
ruleNFRAttributeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNFRAttributeValueAccess().getValueAssignment()); }
(rule__NFRAttributeValue__ValueAssignment)
{ after(grammarAccess.getNFRAttributeValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOPERATORAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getOPERATORAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOPERATORAccess().getGreaterThanSignKeyword_1()); }

	'>' 

{ after(grammarAccess.getOPERATORAccess().getGreaterThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOPERATORAccess().getEqualsSignEqualsSignKeyword_2()); }

	'==' 

{ after(grammarAccess.getOPERATORAccess().getEqualsSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOPERATORAccess().getLessThanSignGreaterThanSignKeyword_3()); }

	'<>' 

{ after(grammarAccess.getOPERATORAccess().getLessThanSignGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LOGICAL_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLOGICAL_OPERATORAccess().getANDKeyword_0()); }

	'AND' 

{ after(grammarAccess.getLOGICAL_OPERATORAccess().getANDKeyword_0()); }
)

    |(
{ before(grammarAccess.getLOGICAL_OPERATORAccess().getORKeyword_1()); }

	'OR' 

{ after(grammarAccess.getLOGICAL_OPERATORAccess().getORKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MATH_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMATH_OPERATORAccess().getMaxKeyword_0()); }

	'max' 

{ after(grammarAccess.getMATH_OPERATORAccess().getMaxKeyword_0()); }
)

    |(
{ before(grammarAccess.getMATH_OPERATORAccess().getMinKeyword_1()); }

	'min' 

{ after(grammarAccess.getMATH_OPERATORAccess().getMinKeyword_1()); }
)

    |(
{ before(grammarAccess.getMATH_OPERATORAccess().getAvgKeyword_2()); }

	'avg' 

{ after(grammarAccess.getMATH_OPERATORAccess().getAvgKeyword_2()); }
)

    |(
{ before(grammarAccess.getMATH_OPERATORAccess().getCountKeyword_3()); }

	'count' 

{ after(grammarAccess.getMATH_OPERATORAccess().getCountKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicAction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicActionAccess().getSelectActionParserRuleCall_0()); }
	ruleSelectAction
{ after(grammarAccess.getAtomicActionAccess().getSelectActionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicActionAccess().getDeselectActionParserRuleCall_1()); }
	ruleDeselectAction
{ after(grammarAccess.getAtomicActionAccess().getDeselectActionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicActionAccess().getModifyAttributeParserRuleCall_2()); }
	ruleModifyAttribute
{ after(grammarAccess.getAtomicActionAccess().getModifyAttributeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAtomicActionAccess().getQueryActionParserRuleCall_3()); }
	ruleQueryAction
{ after(grammarAccess.getAtomicActionAccess().getQueryActionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getStringAttributeValueParserRuleCall_0()); }
	ruleStringAttributeValue
{ after(grammarAccess.getAttributeValueAccess().getStringAttributeValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAttributeValueAccess().getNFRAttributeValueParserRuleCall_1()); }
	ruleNFRAttributeValue
{ after(grammarAccess.getAttributeValueAccess().getNFRAttributeValueParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AdaptationModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdaptationModel__Group__0__Impl
	rule__AdaptationModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getImportsAssignment_0()); }
(rule__AdaptationModel__ImportsAssignment_0)*
{ after(grammarAccess.getAdaptationModelAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdaptationModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdaptationModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getRulesAssignment_1()); }
(rule__AdaptationModel__RulesAssignment_1)*
{ after(grammarAccess.getAdaptationModelAccess().getRulesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }

	'rule' 

{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
(rule__Rule__NameAssignment_1)
{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getRuleAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getIfKeyword_3()); }

	'if' 

{ after(grammarAccess.getRuleAccess().getIfKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getConditionAssignment_4()); }
(rule__Rule__ConditionAssignment_4)
{ after(grammarAccess.getRuleAccess().getConditionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__5__Impl
	rule__Rule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getThenKeyword_5()); }

	'then' 

{ after(grammarAccess.getRuleAccess().getThenKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__6__Impl
	rule__Rule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRuleAccess().getAtomicActionAssignment_6()); }
(rule__Rule__AtomicActionAssignment_6)
{ after(grammarAccess.getRuleAccess().getAtomicActionAssignment_6()); }
)
(
{ before(grammarAccess.getRuleAccess().getAtomicActionAssignment_6()); }
(rule__Rule__AtomicActionAssignment_6)*
{ after(grammarAccess.getRuleAccess().getAtomicActionAssignment_6()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGroup_7()); }
(rule__Rule__Group_7__0)*
{ after(grammarAccess.getRuleAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Rule__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_7__0__Impl
	rule__Rule__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getElseKeyword_7_0()); }

	'else' 

{ after(grammarAccess.getRuleAccess().getElseKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_7__1__Impl
	rule__Rule__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGroup_7_1()); }
(rule__Rule__Group_7_1__0)*
{ after(grammarAccess.getRuleAccess().getGroup_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRuleAccess().getAtomicActionAssignment_7_2()); }
(rule__Rule__AtomicActionAssignment_7_2)
{ after(grammarAccess.getRuleAccess().getAtomicActionAssignment_7_2()); }
)
(
{ before(grammarAccess.getRuleAccess().getAtomicActionAssignment_7_2()); }
(rule__Rule__AtomicActionAssignment_7_2)*
{ after(grammarAccess.getRuleAccess().getAtomicActionAssignment_7_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Rule__Group_7_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_7_1__0__Impl
	rule__Rule__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getIfKeyword_7_1_0()); }

	'if' 

{ after(grammarAccess.getRuleAccess().getIfKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_7_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_7_1__1__Impl
	rule__Rule__Group_7_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getConditionAssignment_7_1_1()); }
(rule__Rule__ConditionAssignment_7_1_1)
{ after(grammarAccess.getRuleAccess().getConditionAssignment_7_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_7_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_7_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getThenKeyword_7_1_2()); }

	'then' 

{ after(grammarAccess.getRuleAccess().getThenKeyword_7_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MeasurementComparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementComparison__Group__0__Impl
	rule__MeasurementComparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementComparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementComparisonAccess().getMeasurementAssignment_0()); }
(rule__MeasurementComparison__MeasurementAssignment_0)
{ after(grammarAccess.getMeasurementComparisonAccess().getMeasurementAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementComparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementComparison__Group__1__Impl
	rule__MeasurementComparison__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementComparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementComparisonAccess().getOPERATORParserRuleCall_1()); }
	ruleOPERATOR
{ after(grammarAccess.getMeasurementComparisonAccess().getOPERATORParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementComparison__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementComparison__Group__2__Impl
	rule__MeasurementComparison__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementComparison__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementComparisonAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getMeasurementComparisonAccess().getSTRINGTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementComparison__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementComparison__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementComparison__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementComparisonAccess().getLOGICAL_OPERATORParserRuleCall_3()); }
(	ruleLOGICAL_OPERATOR)?
{ after(grammarAccess.getMeasurementComparisonAccess().getLOGICAL_OPERATORParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__QueryAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__0__Impl
	rule__QueryAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getSelectFeatureKeyword_0()); }

	'select feature' 

{ after(grammarAccess.getQueryActionAccess().getSelectFeatureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__1__Impl
	rule__QueryAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getWithKeyword_1()); }

	'with' 

{ after(grammarAccess.getQueryActionAccess().getWithKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__2__Impl
	rule__QueryAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getMATH_OPERATORParserRuleCall_2()); }
	ruleMATH_OPERATOR
{ after(grammarAccess.getQueryActionAccess().getMATH_OPERATORParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__3__Impl
	rule__QueryAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getAttributeKeyword_3()); }

	'attribute' 

{ after(grammarAccess.getQueryActionAccess().getAttributeKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__4__Impl
	rule__QueryAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getSTRINGTerminalRuleCall_4()); }
	RULE_STRING
{ after(grammarAccess.getQueryActionAccess().getSTRINGTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__5__Impl
	rule__QueryAction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getFromFeatureKeyword_5()); }

	'from feature' 

{ after(grammarAccess.getQueryActionAccess().getFromFeatureKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getFeatureAssignment_6()); }
(rule__QueryAction__FeatureAssignment_6)
{ after(grammarAccess.getQueryActionAccess().getFeatureAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SelectAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectAction__Group__0__Impl
	rule__SelectAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectActionAccess().getSelectFeatureKeyword_0()); }

	'select feature' 

{ after(grammarAccess.getSelectActionAccess().getSelectFeatureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectActionAccess().getFeatureAssignment_1()); }
(rule__SelectAction__FeatureAssignment_1)
{ after(grammarAccess.getSelectActionAccess().getFeatureAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeselectAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeselectAction__Group__0__Impl
	rule__DeselectAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeselectAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeselectActionAccess().getDeselectFeatureKeyword_0()); }

	'deselect feature' 

{ after(grammarAccess.getDeselectActionAccess().getDeselectFeatureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeselectAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeselectAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeselectAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeselectActionAccess().getFeatureAssignment_1()); }
(rule__DeselectAction__FeatureAssignment_1)
{ after(grammarAccess.getDeselectActionAccess().getFeatureAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModifyAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyAttribute__Group__0__Impl
	rule__ModifyAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyAttributeAccess().getSetAttributeKeyword_0()); }

	'set attribute' 

{ after(grammarAccess.getModifyAttributeAccess().getSetAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyAttribute__Group__1__Impl
	rule__ModifyAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyAttributeAccess().getFeatureAttributeAssignment_1()); }
(rule__ModifyAttribute__FeatureAttributeAssignment_1)
{ after(grammarAccess.getModifyAttributeAccess().getFeatureAttributeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyAttribute__Group__2__Impl
	rule__ModifyAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyAttributeAccess().getWithValueKeyword_2()); }

	'with value' 

{ after(grammarAccess.getModifyAttributeAccess().getWithValueKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModifyAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModifyAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyAttributeAccess().getAttributeValueAssignment_3()); }
(rule__ModifyAttribute__AttributeValueAssignment_3)
{ after(grammarAccess.getModifyAttributeAccess().getAttributeValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__AdaptationModel__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getAdaptationModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptationModel__RulesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdaptationModelAccess().getRulesRuleParserRuleCall_1_0()); }
	ruleRule{ after(grammarAccess.getAdaptationModelAccess().getRulesRuleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConditionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getConditionConditionParserRuleCall_4_0()); }
	ruleCondition{ after(grammarAccess.getRuleAccess().getConditionConditionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__AtomicActionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getAtomicActionAtomicActionParserRuleCall_6_0()); }
	ruleAtomicAction{ after(grammarAccess.getRuleAccess().getAtomicActionAtomicActionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConditionAssignment_7_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getConditionConditionParserRuleCall_7_1_1_0()); }
	ruleCondition{ after(grammarAccess.getRuleAccess().getConditionConditionParserRuleCall_7_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__AtomicActionAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getAtomicActionAtomicActionParserRuleCall_7_2_0()); }
	ruleAtomicAction{ after(grammarAccess.getRuleAccess().getAtomicActionAtomicActionParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__MeasurementComparisonAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getMeasurementComparisonMeasurementComparisonParserRuleCall_0()); }
	ruleMeasurementComparison{ after(grammarAccess.getConditionAccess().getMeasurementComparisonMeasurementComparisonParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementComparison__MeasurementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementComparisonAccess().getMeasurementContextDependentMeasurementCrossReference_0_0()); }
(
{ before(grammarAccess.getMeasurementComparisonAccess().getMeasurementContextDependentMeasurementQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getMeasurementComparisonAccess().getMeasurementContextDependentMeasurementQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMeasurementComparisonAccess().getMeasurementContextDependentMeasurementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__QueryAction__FeatureAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getFeatureFeatureCrossReference_6_0()); }
(
{ before(grammarAccess.getQueryActionAccess().getFeatureFeatureIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getQueryActionAccess().getFeatureFeatureIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getQueryActionAccess().getFeatureFeatureCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAction__FeatureAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectActionAccess().getFeatureFeatureCrossReference_1_0()); }
(
{ before(grammarAccess.getSelectActionAccess().getFeatureFeatureIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSelectActionAccess().getFeatureFeatureIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getSelectActionAccess().getFeatureFeatureCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeselectAction__FeatureAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeselectActionAccess().getFeatureFeatureCrossReference_1_0()); }
(
{ before(grammarAccess.getDeselectActionAccess().getFeatureFeatureIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDeselectActionAccess().getFeatureFeatureIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDeselectActionAccess().getFeatureFeatureCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyAttribute__FeatureAttributeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyAttributeAccess().getFeatureAttributeCVAttributeCrossReference_1_0()); }
(
{ before(grammarAccess.getModifyAttributeAccess().getFeatureAttributeCVAttributeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getModifyAttributeAccess().getFeatureAttributeCVAttributeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getModifyAttributeAccess().getFeatureAttributeCVAttributeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifyAttribute__AttributeValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifyAttributeAccess().getAttributeValueAttributeValueParserRuleCall_3_0()); }
	ruleAttributeValue{ after(grammarAccess.getModifyAttributeAccess().getAttributeValueAttributeValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributeValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringAttributeValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringAttributeValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NFRAttributeValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNFRAttributeValueAccess().getValueNFRAttributeCrossReference_0()); }
(
{ before(grammarAccess.getNFRAttributeValueAccess().getValueNFRAttributeQualifiedNameParserRuleCall_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getNFRAttributeValueAccess().getValueNFRAttributeQualifiedNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getNFRAttributeValueAccess().getValueNFRAttributeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


