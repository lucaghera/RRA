/*
* generated by Xtext
*/
grammar InternalAdaptationModelDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.rra.adaptationModel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.rra.adaptationModel.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.rra.adaptationModel.services.AdaptationModelDSLGrammarAccess;

}

@parser::members {

 	private AdaptationModelDSLGrammarAccess grammarAccess;
 	
    public InternalAdaptationModelDSLParser(TokenStream input, AdaptationModelDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AdaptationModel";	
   	}
   	
   	@Override
   	protected AdaptationModelDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAdaptationModel
entryRuleAdaptationModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdaptationModelRule()); }
	 iv_ruleAdaptationModel=ruleAdaptationModel 
	 { $current=$iv_ruleAdaptationModel.current; } 
	 EOF 
;

// Rule AdaptationModel
ruleAdaptationModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAdaptationModelAccess().getImportsImportParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdaptationModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getAdaptationModelAccess().getRulesRuleParserRuleCall_1_0()); 
	    }
		lv_rules_1_0=ruleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdaptationModelRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_1_0, 
        		"Rule");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getAdaptationModelAccess().getRuleSetsRuleSetParserRuleCall_2_0()); 
	    }
		lv_ruleSets_2_0=ruleRuleSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdaptationModelRule());
	        }
       		add(
       			$current, 
       			"ruleSets",
        		lv_ruleSets_2_0, 
        		"RuleSet");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_1_0, 
        		"STRING");
	    }

)
))
;







// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	 iv_ruleRule=ruleRule 
	 { $current=$iv_ruleRule.current; } 
	 EOF 
;

// Rule Rule
ruleRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getColonKeyword_2());
    }
(	otherlv_3='if' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRuleAccess().getIfKeyword_3_0());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getLeftParenthesisKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getConditionConditionParserRuleCall_3_2_0()); 
	    }
		lv_condition_5_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		add(
       			$current, 
       			"condition",
        		lv_condition_5_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRuleAccess().getRightParenthesisKeyword_3_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getAtomicActionAtomicActionParserRuleCall_4_0()); 
	    }
		lv_atomicAction_7_0=ruleAtomicAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		add(
       			$current, 
       			"atomicAction",
        		lv_atomicAction_7_0, 
        		"AtomicAction");
	        afterParserOrEnumRuleCall();
	    }

)
)+(	otherlv_8='else' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRuleAccess().getElseKeyword_5_0());
    }
(	otherlv_9='if' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRuleAccess().getIfKeyword_5_1_0());
    }
	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRuleAccess().getLeftParenthesisKeyword_5_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getConditionConditionParserRuleCall_5_1_2_0()); 
	    }
		lv_condition_11_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		add(
       			$current, 
       			"condition",
        		lv_condition_11_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRuleAccess().getRightParenthesisKeyword_5_1_3());
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getAtomicActionAtomicActionParserRuleCall_5_2_0()); 
	    }
		lv_atomicAction_13_0=ruleAtomicAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		add(
       			$current, 
       			"atomicAction",
        		lv_atomicAction_13_0, 
        		"AtomicAction");
	        afterParserOrEnumRuleCall();
	    }

)
)+)*	otherlv_14=';' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getRuleAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleRuleWithPriority
entryRuleRuleWithPriority returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleWithPriorityRule()); }
	 iv_ruleRuleWithPriority=ruleRuleWithPriority 
	 { $current=$iv_ruleRuleWithPriority.current; } 
	 EOF 
;

// Rule RuleWithPriority
ruleRuleWithPriority returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='priority' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleWithPriorityAccess().getPriorityKeyword_0());
    }
(
(
		lv_priorityValue_1_0=RULE_INT
		{
			newLeafNode(lv_priorityValue_1_0, grammarAccess.getRuleWithPriorityAccess().getPriorityValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleWithPriorityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"priorityValue",
        		lv_priorityValue_1_0, 
        		"INT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleWithPriorityAccess().getRuleRuleParserRuleCall_2_0()); 
	    }
		lv_rule_2_0=ruleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleWithPriorityRule());
	        }
       		add(
       			$current, 
       			"rule",
        		lv_rule_2_0, 
        		"Rule");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRuleSet
entryRuleRuleSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleSetRule()); }
	 iv_ruleRuleSet=ruleRuleSet 
	 { $current=$iv_ruleRuleSet.current; } 
	 EOF 
;

// Rule RuleSet
ruleRuleSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule_set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleSetAccess().getRule_setKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRuleSetAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleSetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRuleSetAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleSetAccess().getRulesRuleWithPriorityParserRuleCall_3_0()); 
	    }
		lv_rules_3_0=ruleRuleWithPriority		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleSetRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_3_0, 
        		"RuleWithPriority");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='};' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRuleSetAccess().getRightCurlyBracketSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getMeasurementComparisonMeasurementComparisonParserRuleCall_0()); 
	    }
		lv_measurementComparison_0_0=ruleMeasurementComparison		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		add(
       			$current, 
       			"measurementComparison",
        		lv_measurementComparison_0_0, 
        		"MeasurementComparison");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleMeasurementComparison
entryRuleMeasurementComparison returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMeasurementComparisonRule()); }
	 iv_ruleMeasurementComparison=ruleMeasurementComparison 
	 { $current=$iv_ruleMeasurementComparison.current; } 
	 EOF 
;

// Rule MeasurementComparison
ruleMeasurementComparison returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMeasurementComparisonRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMeasurementComparisonAccess().getMeasurementContextDependentMeasurementCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMeasurementComparisonAccess().getOPERATORParserRuleCall_1()); 
    }
ruleOPERATOR
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getMeasurementComparisonAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMeasurementComparisonRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getMeasurementComparisonAccess().getLOGICAL_OPERATORParserRuleCall_3()); 
    }
ruleLOGICAL_OPERATOR
    { 
        afterParserOrEnumRuleCall();
    }
)?)
;





// Entry rule entryRuleOPERATOR
entryRuleOPERATOR returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOPERATORRule()); } 
	 iv_ruleOPERATOR=ruleOPERATOR 
	 { $current=$iv_ruleOPERATOR.current.getText(); }  
	 EOF 
;

// Rule OPERATOR
ruleOPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOPERATORAccess().getLessThanSignKeyword_0()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOPERATORAccess().getGreaterThanSignKeyword_1()); 
    }

    |
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOPERATORAccess().getEqualsSignEqualsSignKeyword_2()); 
    }

    |
	kw='<>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOPERATORAccess().getLessThanSignGreaterThanSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleLOGICAL_OPERATOR
entryRuleLOGICAL_OPERATOR returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLOGICAL_OPERATORRule()); } 
	 iv_ruleLOGICAL_OPERATOR=ruleLOGICAL_OPERATOR 
	 { $current=$iv_ruleLOGICAL_OPERATOR.current.getText(); }  
	 EOF 
;

// Rule LOGICAL_OPERATOR
ruleLOGICAL_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='AND' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLOGICAL_OPERATORAccess().getANDKeyword_0()); 
    }

    |
	kw='OR' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLOGICAL_OPERATORAccess().getORKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleAtomicAction
entryRuleAtomicAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicActionRule()); }
	 iv_ruleAtomicAction=ruleAtomicAction 
	 { $current=$iv_ruleAtomicAction.current; } 
	 EOF 
;

// Rule AtomicAction
ruleAtomicAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getAtomicActionAccess().getSelectActionParserRuleCall_0_0()); 
    }
    this_SelectAction_0=ruleSelectAction
    { 
        $current = $this_SelectAction_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicActionAccess().getDeselectActionParserRuleCall_0_1()); 
    }
    this_DeselectAction_1=ruleDeselectAction
    { 
        $current = $this_DeselectAction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicActionAccess().getModifyAttributeParserRuleCall_0_2()); 
    }
    this_ModifyAttribute_2=ruleModifyAttribute
    { 
        $current = $this_ModifyAttribute_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicActionAccess().getQueryActionParserRuleCall_0_3()); 
    }
    this_QueryAction_3=ruleQueryAction
    { 
        $current = $this_QueryAction_3.current; 
        afterParserOrEnumRuleCall();
    }
)(	otherlv_4='AND' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAtomicActionAccess().getANDKeyword_1());
    }
)?)
;





// Entry rule entryRuleQueryAction
entryRuleQueryAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryActionRule()); }
	 iv_ruleQueryAction=ruleQueryAction 
	 { $current=$iv_ruleQueryAction.current; } 
	 EOF 
;

// Rule QueryAction
ruleQueryAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='select_feature_*' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQueryActionAccess().getSelect_feature_Keyword_0());
    }
	otherlv_1='from_variants_of_feature' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQueryActionAccess().getFrom_variants_of_featureKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQueryActionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getQueryActionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getQueryActionAccess().getFeatureFeatureCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getQueryActionAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5='where_attribue' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getQueryActionAccess().getWhere_attribueKeyword_5());
    }

    { 
        newCompositeNode(grammarAccess.getQueryActionAccess().getQueryOperatorParserRuleCall_6()); 
    }
ruleQueryOperator
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getQueryActionAccess().getLeftParenthesisKeyword_7());
    }
(
(
		lv_value_8_0=RULE_STRING
		{
			newLeafNode(lv_value_8_0, grammarAccess.getQueryActionAccess().getValueSTRINGTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQueryActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_8_0, 
        		"STRING");
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getQueryActionAccess().getRightParenthesisKeyword_9());
    }
)
;





// Entry rule entryRuleQueryOperator
entryRuleQueryOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryOperatorRule()); } 
	 iv_ruleQueryOperator=ruleQueryOperator 
	 { $current=$iv_ruleQueryOperator.current.getText(); }  
	 EOF 
;

// Rule QueryOperator
ruleQueryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='max' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQueryOperatorAccess().getMaxKeyword_0()); 
    }

    |
	kw='min' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQueryOperatorAccess().getMinKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleSelectAction
entryRuleSelectAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectActionRule()); }
	 iv_ruleSelectAction=ruleSelectAction 
	 { $current=$iv_ruleSelectAction.current; } 
	 EOF 
;

// Rule SelectAction
ruleSelectAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='activate_feature' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSelectActionAccess().getActivate_featureKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSelectActionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectActionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSelectActionAccess().getFeatureFeatureCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSelectActionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleDeselectAction
entryRuleDeselectAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeselectActionRule()); }
	 iv_ruleDeselectAction=ruleDeselectAction 
	 { $current=$iv_ruleDeselectAction.current; } 
	 EOF 
;

// Rule DeselectAction
ruleDeselectAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='deactivate_feature' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeselectActionAccess().getDeactivate_featureKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeselectActionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeselectActionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDeselectActionAccess().getFeatureFeatureCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeselectActionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleModifyAttribute
entryRuleModifyAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModifyAttributeRule()); }
	 iv_ruleModifyAttribute=ruleModifyAttribute 
	 { $current=$iv_ruleModifyAttribute.current; } 
	 EOF 
;

// Rule ModifyAttribute
ruleModifyAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='set_attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModifyAttributeAccess().getSet_attributeKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModifyAttributeAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModifyAttributeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModifyAttributeAccess().getFeatureAttributeCVAttributeCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModifyAttributeAccess().getRightParenthesisKeyword_3());
    }
	otherlv_4='with_value' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModifyAttributeAccess().getWith_valueKeyword_4());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModifyAttributeAccess().getLeftParenthesisKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModifyAttributeAccess().getAttributeValueAttributeValueParserRuleCall_6_0()); 
	    }
		lv_attributeValue_6_0=ruleAttributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifyAttributeRule());
	        }
       		add(
       			$current, 
       			"attributeValue",
        		lv_attributeValue_6_0, 
        		"AttributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getModifyAttributeAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleAttributeValue
entryRuleAttributeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeValueRule()); }
	 iv_ruleAttributeValue=ruleAttributeValue 
	 { $current=$iv_ruleAttributeValue.current; } 
	 EOF 
;

// Rule AttributeValue
ruleAttributeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getStringAttributeValueParserRuleCall_0()); 
    }
    this_StringAttributeValue_0=ruleStringAttributeValue
    { 
        $current = $this_StringAttributeValue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getNFRAttributeValueParserRuleCall_1()); 
    }
    this_NFRAttributeValue_1=ruleNFRAttributeValue
    { 
        $current = $this_NFRAttributeValue_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStringAttributeValue
entryRuleStringAttributeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringAttributeValueRule()); }
	 iv_ruleStringAttributeValue=ruleStringAttributeValue 
	 { $current=$iv_ruleStringAttributeValue.current; } 
	 EOF 
;

// Rule StringAttributeValue
ruleStringAttributeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringAttributeValueAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringAttributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleNFRAttributeValue
entryRuleNFRAttributeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNFRAttributeValueRule()); }
	 iv_ruleNFRAttributeValue=ruleNFRAttributeValue 
	 { $current=$iv_ruleNFRAttributeValue.current; } 
	 EOF 
;

// Rule NFRAttributeValue
ruleNFRAttributeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNFRAttributeValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNFRAttributeValueAccess().getValueNFRAttributeCrossReference_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


